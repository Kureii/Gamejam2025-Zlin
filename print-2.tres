[gd_resource type="VisualShader" load_steps=79 format=3 uid="uid://jiehhhtsbxp8"]

[ext_resource type="Texture2D" uid="uid://beltx7eptk08o" path="res://dots.png" id="1_ilwj8"]
[ext_resource type="Texture2D" uid="uid://buqbomjw0s5yg" path="res://dots2.png" id="2_acele"]
[ext_resource type="Texture2D" uid="uid://db5dydbev4knk" path="res://test_page.png" id="2_ua020"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_acele"]
input_name = "uv"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_kt415"]
function = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_an5xb"]
parameter_name = "dots"
texture_type = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_hpyns"]
parameter_name = "dots_scale"
default_value_enabled = true
default_value = 50.0

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_lcfsm"]
parameter_name = "Vector2Parameter"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_5brlf"]
source = 5
texture = ExtResource("1_ilwj8")

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_4vb81"]
default_input_values = [0, Vector3(0, 0, 0)]
port_type = 4

[sub_resource type="VisualShaderNodeFrame" id="VisualShaderNodeFrame_uatwl"]
size = Vector2(932, 606)
title = "Dots M"
attached_nodes = PackedInt32Array(144, 198, 199, 200, 201, 214)

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_lfbdd"]
default_input_values = [0, 0.0, 1, -1.0, 2, 1.0]
linked_parent_graph_frame = 143

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_fsldn"]
parameter_name = "Texture"
texture_type = 1

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_fsmjo"]
size = Vector2(480, 460)
expression = "
	// Convert CMYK to RGB
    float r = 1.0 - min(1.0, c * (1.0 - k) + k);
    float g = 1.0 - min(1.0, m * (1.0 - k) + k);
    float b = 1.0 - min(1.0, y * (1.0 - k) + k);

    // Set the fragment color to the RGB values
    rgb = vec3(r, g, b);"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_m3lvb"]
size = Vector2(500, 420)
expression = "    // Normalize RGB (if necessary)
    float r = rgb.r;
    float g = rgb.g;
    float b = rgb.b;

    // Find K (black)
    k = 1.0 - max(r, max(g, b));
	k = smoothstep(threshold,1.0,k);

    // If K is not 1, compute C, M, and Y
    c = (k < 1.0) ? (1.0 - r - k) / (1.0 - k) : 0.0;
    m = (k < 1.0) ? (1.0 - g - k) / (1.0 - k) : 0.0;
    y = (k < 1.0) ? (1.0 - b - k) / (1.0 - k) : 0.0;"

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_go5t5"]
function = 4

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_sl413"]
function = 5

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_dkdhp"]
default_input_values = [0, Vector4(0, 0, 0, 0)]
port_type = 5

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_l1or0"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1), 2, Vector2(0, 0)]
op_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_uvkmj"]
source = 5
texture = ExtResource("2_acele")

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_x3ut1"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1), 2, Vector2(0.21, 0.135)]
op_type = 1

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_x2tgo"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(1, 1), 2, Vector2(-0.23, -0.24)]
op_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_e2uu5"]
source = 5
texture = ExtResource("2_acele")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_n8qcf"]
expanded_output_ports = [0]
source = 5
texture = ExtResource("2_ua020")
texture_type = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_2io3u"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.001, 0.001)]
op_type = 0

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_jmmrl"]
expanded_output_ports = [0]
source = 5
texture = ExtResource("2_ua020")
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fl20y"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_n3l3a"]
default_input_values = [0, Vector2(2.49, 1.415), 1, Vector2(0.001, 0.001)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_oiiov"]
parameter_name = "sat"
hint = 1
min = 0.8
max = 1.2
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ox3rk"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_u8kgv"]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_s02cb"]
operator = 2

[sub_resource type="VisualShaderNodeRotationByAxis" id="VisualShaderNodeRotationByAxis_uatwl"]
default_input_values = [0, Vector3(0, 0, 0), 1, 0.2, 2, Vector3(0, 0, 1)]

[sub_resource type="VisualShaderNodeRotationByAxis" id="VisualShaderNodeRotationByAxis_lfbdd"]
default_input_values = [0, Vector3(0, 0, 0), 1, -0.2, 2, Vector3(0, 0, 1)]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_an5xb"]
parameter_name = "dots_scale_individual"
hint = 1
min = 0.5
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_hpyns"]
default_input_values = [0, 0.0, 1, -1.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_lcfsm"]
parameter_name = "black_threshold"
hint = 1
default_value_enabled = true
default_value = 0.8

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_4vb81"]
default_input_values = [0, 0.0, 1, 1.0, 2, -0.08]
linked_parent_graph_frame = 143

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_qqkk3"]
default_input_values = [0, 0.0, 1, 0.115]
linked_parent_graph_frame = 143

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_3gfbt"]
linked_parent_graph_frame = 143

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_ii3cv"]
linked_parent_graph_frame = 143

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_xof8x"]

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_gfub0"]

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_cfpue"]

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_esqut"]

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_0b7bf"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_lp0p4"]
parameter_name = "dots_smooth"
hint = 1
default_value_enabled = true
default_value = 0.2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_fsmjo"]
default_input_values = [0, 0.0, 1, -0.25]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ulppe"]
default_input_values = [0, 0.0, 1, 0.115]
linked_parent_graph_frame = 214

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_m3lvb"]
linked_parent_graph_frame = 214

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_3uxxx"]
default_input_values = [0, 0.0, 1, 1.0, 2, -0.08]
linked_parent_graph_frame = 214

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_ggofg"]
default_input_values = [0, 0.0, 1, -1.0, 2, 1.0]
linked_parent_graph_frame = 214

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_j31qb"]
linked_parent_graph_frame = 214

[sub_resource type="VisualShaderNodeFrame" id="VisualShaderNodeFrame_go5t5"]
size = Vector2(932, 606)
title = "Dots C"
attached_nodes = PackedInt32Array(210, 213, 212, 211, 209)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_sl413"]
default_input_values = [0, 0.0, 1, 0.115]
linked_parent_graph_frame = 220

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_dkdhp"]
default_input_values = [0, 0.0, 1, 1.0, 2, -0.08]
linked_parent_graph_frame = 220

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_uvkmj"]
default_input_values = [0, 0.0, 1, -1.0, 2, 1.0]
linked_parent_graph_frame = 220

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_x3ut1"]
linked_parent_graph_frame = 220

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_x2tgo"]
linked_parent_graph_frame = 220

[sub_resource type="VisualShaderNodeFrame" id="VisualShaderNodeFrame_e2uu5"]
size = Vector2(932, 606)
title = "Dots Y"
attached_nodes = PackedInt32Array(215, 219, 218, 217, 216)

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_ppohm"]

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_65xsm"]

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_qjeco"]

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_ua020"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_acele"]
size = Vector2(500, 420)
expression = "    // Normalize RGB (if necessary)
    float r = rgb.r;
    float g = rgb.g;
    float b = rgb.b;

    // Find K (black)
    k = 1.0 - max(r, max(g, b));
	k = smoothstep(threshold,1.0,k);

    // If K is not 1, compute C, M, and Y
    c = (k < 1.0) ? (1.0 - r - k) / (1.0 - k) : 0.0;
    m = (k < 1.0) ? (1.0 - g - k) / (1.0 - k) : 0.0;
    y = (k < 1.0) ? (1.0 - b - k) / (1.0 - k) : 0.0;"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_kt415"]

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_uatwl"]
parameter_name = "black_offset"
default_value_enabled = true

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_lfbdd"]
linked_parent_graph_frame = 233

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_an5xb"]
default_input_values = [0, 0.0, 1, 1.0, 2, -0.08]
linked_parent_graph_frame = 233

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_lcfsm"]
default_input_values = [0, 0.0, 1, 0.115]
linked_parent_graph_frame = 233

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_5brlf"]
default_input_values = [0, 0.0, 1, -1.0, 2, 1.0]
linked_parent_graph_frame = 233

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_mdutf"]
linked_parent_graph_frame = 233

[sub_resource type="VisualShaderNodeFrame" id="VisualShaderNodeFrame_scs4h"]
size = Vector2(932, 606)
title = "Dots K"
attached_nodes = PackedInt32Array(229, 228, 232, 231, 230)

[sub_resource type="VisualShaderNodeReroute" id="VisualShaderNodeReroute_g6fad"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ua020"]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_acele"]
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_kt415"]
parameter_name = "paper_texture"
texture_type = 1

[sub_resource type="VisualShaderNodeRotationByAxis" id="VisualShaderNodeRotationByAxis_ua020"]
default_input_values = [0, Vector3(0, 0, 0), 1, 0.4, 2, Vector3(0, 0, 1)]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec2 Vector2Parameter = vec2(1.000000, 1.000000);
uniform float dots_scale = 50.0;
uniform sampler2D dots : source_color, repeat_enable;
uniform float dots_smooth : hint_range(0.0, 1.0) = 0.20000000298023;
uniform sampler2D Texture : source_color;
uniform float black_threshold : hint_range(0.0, 1.0) = 0.80000001192093;
uniform float dots_scale_individual : hint_range(0.5, 1.0) = 1.0;
uniform float sat : hint_range(0.80000001192093, 1.20000004768372) = 1.0;
uniform vec2 black_offset = vec2(0.000000, 0.000000);
uniform sampler2D paper_texture : source_color;



void fragment() {
// Input:125
	vec2 n_out125p0 = UV;


// Vector2Parameter:132
	vec2 n_out132p0 = Vector2Parameter;


// UVFunc:126
	vec2 n_in126p2 = vec2(0.00000, 0.00000);
	vec2 n_out126p0 = (n_out125p0 - n_in126p2) * n_out132p0 + n_in126p2;


// FloatParameter:130
	float n_out130p0 = dots_scale;


// MultiplyAdd:169
	vec2 n_in169p2 = vec2(0.00000, 0.00000);
	vec2 n_out169p0 = fma(n_out126p0, vec2(n_out130p0), n_in169p2);


	vec3 n_out190p0;
	mat4 n_out190p1;
// RotationByAxis:190
	float n_in190p1 = 0.20000;
	vec3 n_in190p2 = vec3(0.00000, 0.00000, 1.00000);
	{
		float __angle = n_in190p1;
		vec3 __axis = normalize(n_in190p2);
		mat3 __rot_matrix = mat3(
			vec3( cos(__angle)+__axis.x*__axis.x*(1.0 - cos(__angle)), __axis.x*__axis.y*(1.0-cos(__angle))-__axis.z*sin(__angle), __axis.x*__axis.z*(1.0-cos(__angle))+__axis.y*sin(__angle) ),
			vec3( __axis.y*__axis.x*(1.0-cos(__angle))+__axis.z*sin(__angle), cos(__angle)+__axis.y*__axis.y*(1.0-cos(__angle)), __axis.y*__axis.z*(1.0-cos(__angle))-__axis.x*sin(__angle) ),
			vec3( __axis.z*__axis.x*(1.0-cos(__angle))-__axis.y*sin(__angle), __axis.z*__axis.y*(1.0-cos(__angle))+__axis.x*sin(__angle), cos(__angle)+__axis.z*__axis.z*(1.0-cos(__angle)) )
		);
		n_out190p0 = vec3(n_out169p0, 0.0) * __rot_matrix;
	}


	vec4 n_out133p0;
// Texture2D:133
	n_out133p0 = texture(dots, vec2(n_out190p0.xy));


// FloatParameter:207
	float n_out207p0 = dots_smooth;


// FloatOp:208
	float n_in208p1 = -0.25000;
	float n_out208p0 = n_out207p0 * n_in208p1;


// Reroute:221
	float n_out221p0 = n_out208p0;


// MultiplyAdd:211
	float n_in211p1 = 1.00000;
	float n_out211p0 = fma(n_out133p0.x, n_in211p1, n_out221p0);


// Reroute:222
	float n_out222p0 = n_out207p0;


// FloatOp:209
	float n_out209p0 = n_out211p0 + n_out222p0;


	vec4 n_out18p0;
// Texture2D:18
	n_out18p0 = texture(Texture, UV);


// Reroute:168
	vec4 n_out168p0 = n_out18p0;


// FloatParameter:194
	float n_out194p0 = black_threshold;


	float n_out162p0;
	float n_out162p1;
	float n_out162p2;
	float n_out162p3;
// Expression:162
	n_out162p0 = 0.0;
	n_out162p1 = 0.0;
	n_out162p2 = 0.0;
	n_out162p3 = 0.0;
	{
		    // Normalize RGB (if necessary)
		    float r = vec3(n_out168p0.xyz).r;
		    float g = vec3(n_out168p0.xyz).g;
		    float b = vec3(n_out168p0.xyz).b;
		
		    // Find K (black)
		    n_out162p3 = 1.0 - max(r, max(g, b));
			n_out162p3 = smoothstep(n_out194p0,1.0,n_out162p3);
		
		    // If K is not 1, compute C, M, and Y
		    n_out162p0 = (n_out162p3 < 1.0) ? (1.0 - r - n_out162p3) / (1.0 - n_out162p3) : 0.0;
		    n_out162p1 = (n_out162p3 < 1.0) ? (1.0 - g - n_out162p3) / (1.0 - n_out162p3) : 0.0;
		    n_out162p2 = (n_out162p3 < 1.0) ? (1.0 - b - n_out162p3) / (1.0 - n_out162p3) : 0.0;
	}


// FloatParameter:192
	float n_out192p0 = dots_scale_individual;


// FloatOp:193
	float n_in193p1 = -1.00000;
	float n_out193p0 = n_out192p0 * n_in193p1;


// Reroute:223
	float n_out223p0 = n_out193p0;


// MultiplyAdd:212
	float n_in212p2 = 1.00000;
	float n_out212p0 = fma(n_out162p0, n_out223p0, n_in212p2);


// SmoothStep:210
	float n_out210p0 = smoothstep(n_out209p0, n_out211p0, n_out212p0);


// Reroute:213
	float n_out213p0 = n_out210p0;


// Reroute:202
	float n_out202p0 = n_out213p0;


// FloatParameter:183
	float n_out183p0 = sat;


// FloatOp:184
	float n_out184p0 = n_out202p0 * n_out183p0;


// MultiplyAdd:171
	vec2 n_in171p2 = vec2(0.21000, 0.13500);
	vec2 n_out171p0 = fma(n_out126p0, vec2(n_out130p0), n_in171p2);


	vec3 n_out191p0;
	mat4 n_out191p1;
// RotationByAxis:191
	float n_in191p1 = -0.20000;
	vec3 n_in191p2 = vec3(0.00000, 0.00000, 1.00000);
	{
		float __angle = n_in191p1;
		vec3 __axis = normalize(n_in191p2);
		mat3 __rot_matrix = mat3(
			vec3( cos(__angle)+__axis.x*__axis.x*(1.0 - cos(__angle)), __axis.x*__axis.y*(1.0-cos(__angle))-__axis.z*sin(__angle), __axis.x*__axis.z*(1.0-cos(__angle))+__axis.y*sin(__angle) ),
			vec3( __axis.y*__axis.x*(1.0-cos(__angle))+__axis.z*sin(__angle), cos(__angle)+__axis.y*__axis.y*(1.0-cos(__angle)), __axis.y*__axis.z*(1.0-cos(__angle))-__axis.x*sin(__angle) ),
			vec3( __axis.z*__axis.x*(1.0-cos(__angle))-__axis.y*sin(__angle), __axis.z*__axis.y*(1.0-cos(__angle))+__axis.x*sin(__angle), cos(__angle)+__axis.z*__axis.z*(1.0-cos(__angle)) )
		);
		n_out191p0 = vec3(n_out171p0, 0.0) * __rot_matrix;
	}


	vec4 n_out170p0;
// Texture2D:170
	n_out170p0 = texture(dots, vec2(n_out191p0.xy));


// MultiplyAdd:198
	float n_in198p1 = 1.00000;
	float n_out198p0 = fma(n_out170p0.x, n_in198p1, n_out221p0);


// FloatOp:199
	float n_out199p0 = n_out198p0 + n_out222p0;


// MultiplyAdd:144
	float n_in144p2 = 1.00000;
	float n_out144p0 = fma(n_out162p1, n_out223p0, n_in144p2);


// SmoothStep:200
	float n_out200p0 = smoothstep(n_out199p0, n_out198p0, n_out144p0);


// Reroute:201
	float n_out201p0 = n_out200p0;


// Reroute:203
	float n_out203p0 = n_out201p0;


// FloatOp:185
	float n_out185p0 = n_out203p0 * n_out183p0;


// MultiplyAdd:172
	vec2 n_in172p2 = vec2(-0.23000, -0.24000);
	vec2 n_out172p0 = fma(n_out126p0, vec2(n_out130p0), n_in172p2);


	vec3 n_out238p0;
	mat4 n_out238p1;
// RotationByAxis:238
	float n_in238p1 = 0.40000;
	vec3 n_in238p2 = vec3(0.00000, 0.00000, 1.00000);
	{
		float __angle = n_in238p1;
		vec3 __axis = normalize(n_in238p2);
		mat3 __rot_matrix = mat3(
			vec3( cos(__angle)+__axis.x*__axis.x*(1.0 - cos(__angle)), __axis.x*__axis.y*(1.0-cos(__angle))-__axis.z*sin(__angle), __axis.x*__axis.z*(1.0-cos(__angle))+__axis.y*sin(__angle) ),
			vec3( __axis.y*__axis.x*(1.0-cos(__angle))+__axis.z*sin(__angle), cos(__angle)+__axis.y*__axis.y*(1.0-cos(__angle)), __axis.y*__axis.z*(1.0-cos(__angle))-__axis.x*sin(__angle) ),
			vec3( __axis.z*__axis.x*(1.0-cos(__angle))-__axis.y*sin(__angle), __axis.z*__axis.y*(1.0-cos(__angle))+__axis.x*sin(__angle), cos(__angle)+__axis.z*__axis.z*(1.0-cos(__angle)) )
		);
		n_out238p0 = vec3(n_out172p0, 0.0) * __rot_matrix;
	}


	vec4 n_out173p0;
// Texture2D:173
	n_out173p0 = texture(dots, vec2(n_out238p0.xy));


// MultiplyAdd:216
	float n_in216p1 = 1.00000;
	float n_out216p0 = fma(n_out173p0.x, n_in216p1, n_out221p0);


// FloatOp:215
	float n_out215p0 = n_out216p0 + n_out222p0;


// MultiplyAdd:217
	float n_in217p2 = 1.00000;
	float n_out217p0 = fma(n_out162p2, n_out223p0, n_in217p2);


// SmoothStep:219
	float n_out219p0 = smoothstep(n_out215p0, n_out216p0, n_out217p0);


// Reroute:218
	float n_out218p0 = n_out219p0;


// Reroute:204
	float n_out204p0 = n_out218p0;


// FloatOp:186
	float n_out186p0 = n_out204p0 * n_out183p0;


// MultiplyAdd:229
	float n_in229p1 = 1.00000;
	float n_out229p0 = fma(n_out173p0.x, n_in229p1, n_out221p0);


// FloatOp:230
	float n_out230p0 = n_out229p0 + n_out222p0;


// Input:180
	vec2 n_out180p0 = UV;


// Vector2Parameter:227
	vec2 n_out227p0 = black_offset;


// VectorOp:181
	vec2 n_in181p1 = vec2(0.00100, 0.00100);
	vec2 n_out181p0 = n_out227p0 * n_in181p1;


// VectorOp:179
	vec2 n_out179p0 = n_out180p0 + n_out181p0;


	vec4 n_out178p0;
// Texture2D:178
	n_out178p0 = texture(Texture, n_out179p0);


// FloatConstant:226
	float n_out226p0 = 0.000000;


	float n_out225p0;
	float n_out225p1;
	float n_out225p2;
	float n_out225p3;
// Expression:225
	n_out225p0 = 0.0;
	n_out225p1 = 0.0;
	n_out225p2 = 0.0;
	n_out225p3 = 0.0;
	{
		    // Normalize RGB (if necessary)
		    float r = vec3(n_out178p0.xyz).r;
		    float g = vec3(n_out178p0.xyz).g;
		    float b = vec3(n_out178p0.xyz).b;
		
		    // Find K (black)
		    n_out225p3 = 1.0 - max(r, max(g, b));
			n_out225p3 = smoothstep(n_out226p0,1.0,n_out225p3);
		
		    // If K is not 1, compute C, M, and Y
		    n_out225p0 = (n_out225p3 < 1.0) ? (1.0 - r - n_out225p3) / (1.0 - n_out225p3) : 0.0;
		    n_out225p1 = (n_out225p3 < 1.0) ? (1.0 - g - n_out225p3) / (1.0 - n_out225p3) : 0.0;
		    n_out225p2 = (n_out225p3 < 1.0) ? (1.0 - b - n_out225p3) / (1.0 - n_out225p3) : 0.0;
	}


// Reroute:224
	float n_out224p0 = n_out225p3;


// Reroute:234
	float n_out234p0 = n_out224p0;


// MultiplyAdd:231
	float n_in231p2 = 1.00000;
	float n_out231p0 = fma(n_out234p0, n_out223p0, n_in231p2);


// SmoothStep:228
	float n_out228p0 = smoothstep(n_out230p0, n_out229p0, n_out231p0);


// Reroute:232
	float n_out232p0 = n_out228p0;


// Reroute:206
	float n_out206p0 = n_out232p0;


// Reroute:205
	float n_out205p0 = n_out206p0;


	vec3 n_out160p0;
// Expression:160
	n_out160p0 = vec3(0.0, 0.0, 0.0);
	{
		
			// Convert CMYK to RGB
		    float r = 1.0 - min(1.0, n_out184p0 * (1.0 - n_out205p0) + n_out205p0);
		    float g = 1.0 - min(1.0, n_out185p0 * (1.0 - n_out205p0) + n_out205p0);
		    float b = 1.0 - min(1.0, n_out186p0 * (1.0 - n_out205p0) + n_out205p0);
		
		    // Set the fragment color to the RGB values
		    n_out160p0 = vec3(r, g, b);
	}


	vec4 n_out236p0;
// Texture2D:236
	n_out236p0 = texture(paper_texture, UV);


// VectorOp:235
	vec3 n_out235p0 = n_out160p0 * vec3(n_out236p0.xyz);


// Reroute:137
	vec3 n_out137p0 = n_out235p0;


// Output:0
	ALBEDO = n_out137p0;


}
"
graph_offset = Vector2(1708.7, -1855.36)
nodes/fragment/-1/position = Vector2(0, 0)
nodes/fragment/0/position = Vector2(4480, -3060)
nodes/fragment/16/node = SubResource("VisualShaderNodeTexture2DParameter_fsldn")
nodes/fragment/16/position = Vector2(-3440, -1120)
nodes/fragment/18/node = SubResource("VisualShaderNodeTexture_jmmrl")
nodes/fragment/18/position = Vector2(-2740, -1300)
nodes/fragment/125/node = SubResource("VisualShaderNodeInput_acele")
nodes/fragment/125/position = Vector2(-2700, -2560)
nodes/fragment/126/node = SubResource("VisualShaderNodeUVFunc_kt415")
nodes/fragment/126/position = Vector2(-2280, -2360)
nodes/fragment/129/node = SubResource("VisualShaderNodeTexture2DParameter_an5xb")
nodes/fragment/129/position = Vector2(-2120, -3100)
nodes/fragment/130/node = SubResource("VisualShaderNodeFloatParameter_hpyns")
nodes/fragment/130/position = Vector2(-2700, -2840)
nodes/fragment/132/node = SubResource("VisualShaderNodeVec2Parameter_lcfsm")
nodes/fragment/132/position = Vector2(-2660, -2340)
nodes/fragment/133/node = SubResource("VisualShaderNodeTexture_5brlf")
nodes/fragment/133/position = Vector2(-1020, -2700)
nodes/fragment/137/node = SubResource("VisualShaderNodeReroute_4vb81")
nodes/fragment/137/position = Vector2(4100, -2900)
nodes/fragment/143/node = SubResource("VisualShaderNodeFrame_uatwl")
nodes/fragment/143/position = Vector2(240, -3541)
nodes/fragment/144/node = SubResource("VisualShaderNodeMultiplyAdd_lfbdd")
nodes/fragment/144/position = Vector2(280, -3160)
nodes/fragment/160/node = SubResource("VisualShaderNodeExpression_fsmjo")
nodes/fragment/160/position = Vector2(2940, -3080)
nodes/fragment/160/size = Vector2(480, 460)
nodes/fragment/160/input_ports = "0,0,c;1,0,m;2,0,y;3,0,k;"
nodes/fragment/160/output_ports = "0,4,rgb;"
nodes/fragment/160/expression = "
	// Convert CMYK to RGB
    float r = 1.0 - min(1.0, c * (1.0 - k) + k);
    float g = 1.0 - min(1.0, m * (1.0 - k) + k);
    float b = 1.0 - min(1.0, y * (1.0 - k) + k);

    // Set the fragment color to the RGB values
    rgb = vec3(r, g, b);"
nodes/fragment/162/node = SubResource("VisualShaderNodeExpression_m3lvb")
nodes/fragment/162/position = Vector2(-1320, -1640)
nodes/fragment/162/size = Vector2(500, 420)
nodes/fragment/162/input_ports = "0,4,rgb;1,0,threshold;"
nodes/fragment/162/output_ports = "0,0,c;1,0,m;2,0,y;3,0,k;"
nodes/fragment/162/expression = "    // Normalize RGB (if necessary)
    float r = rgb.r;
    float g = rgb.g;
    float b = rgb.b;

    // Find K (black)
    k = 1.0 - max(r, max(g, b));
	k = smoothstep(threshold,1.0,k);

    // If K is not 1, compute C, M, and Y
    c = (k < 1.0) ? (1.0 - r - k) / (1.0 - k) : 0.0;
    m = (k < 1.0) ? (1.0 - g - k) / (1.0 - k) : 0.0;
    y = (k < 1.0) ? (1.0 - b - k) / (1.0 - k) : 0.0;"
nodes/fragment/166/node = SubResource("VisualShaderNodeColorFunc_go5t5")
nodes/fragment/166/position = Vector2(3460, -2880)
nodes/fragment/167/node = SubResource("VisualShaderNodeColorFunc_sl413")
nodes/fragment/167/position = Vector2(-2400, -1320)
nodes/fragment/168/node = SubResource("VisualShaderNodeReroute_dkdhp")
nodes/fragment/168/position = Vector2(-2080, -1240)
nodes/fragment/169/node = SubResource("VisualShaderNodeMultiplyAdd_l1or0")
nodes/fragment/169/position = Vector2(-1700, -2700)
nodes/fragment/170/node = SubResource("VisualShaderNodeTexture_uvkmj")
nodes/fragment/170/position = Vector2(-1080, -2360)
nodes/fragment/171/node = SubResource("VisualShaderNodeMultiplyAdd_x3ut1")
nodes/fragment/171/position = Vector2(-1700, -2360)
nodes/fragment/172/node = SubResource("VisualShaderNodeMultiplyAdd_x2tgo")
nodes/fragment/172/position = Vector2(-1680, -2040)
nodes/fragment/173/node = SubResource("VisualShaderNodeTexture_e2uu5")
nodes/fragment/173/position = Vector2(-1040, -2040)
nodes/fragment/178/node = SubResource("VisualShaderNodeTexture_n8qcf")
nodes/fragment/178/position = Vector2(-2320, -840)
nodes/fragment/179/node = SubResource("VisualShaderNodeVectorOp_2io3u")
nodes/fragment/179/position = Vector2(-2660, -520)
nodes/fragment/180/node = SubResource("VisualShaderNodeInput_fl20y")
nodes/fragment/180/position = Vector2(-3220, -600)
nodes/fragment/181/node = SubResource("VisualShaderNodeVectorOp_n3l3a")
nodes/fragment/181/position = Vector2(-3000, -420)
nodes/fragment/183/node = SubResource("VisualShaderNodeFloatParameter_oiiov")
nodes/fragment/183/position = Vector2(1760, -3560)
nodes/fragment/184/node = SubResource("VisualShaderNodeFloatOp_ox3rk")
nodes/fragment/184/position = Vector2(2440, -3320)
nodes/fragment/185/node = SubResource("VisualShaderNodeFloatOp_u8kgv")
nodes/fragment/185/position = Vector2(2440, -3140)
nodes/fragment/186/node = SubResource("VisualShaderNodeFloatOp_s02cb")
nodes/fragment/186/position = Vector2(2460, -2940)
nodes/fragment/190/node = SubResource("VisualShaderNodeRotationByAxis_uatwl")
nodes/fragment/190/position = Vector2(-1420, -2680)
nodes/fragment/191/node = SubResource("VisualShaderNodeRotationByAxis_lfbdd")
nodes/fragment/191/position = Vector2(-1400, -2340)
nodes/fragment/192/node = SubResource("VisualShaderNodeFloatParameter_an5xb")
nodes/fragment/192/position = Vector2(-1660, -3180)
nodes/fragment/193/node = SubResource("VisualShaderNodeFloatOp_hpyns")
nodes/fragment/193/position = Vector2(-1180, -3300)
nodes/fragment/194/node = SubResource("VisualShaderNodeFloatParameter_lcfsm")
nodes/fragment/194/position = Vector2(-1980, -1660)
nodes/fragment/198/node = SubResource("VisualShaderNodeMultiplyAdd_4vb81")
nodes/fragment/198/position = Vector2(280, -3400)
nodes/fragment/199/node = SubResource("VisualShaderNodeFloatOp_qqkk3")
nodes/fragment/199/position = Vector2(540, -3500)
nodes/fragment/200/node = SubResource("VisualShaderNodeSmoothStep_3gfbt")
nodes/fragment/200/position = Vector2(860, -3420)
nodes/fragment/201/node = SubResource("VisualShaderNodeReroute_ii3cv")
nodes/fragment/201/position = Vector2(1100, -3360)
nodes/fragment/202/node = SubResource("VisualShaderNodeReroute_xof8x")
nodes/fragment/202/position = Vector2(1440, -3260)
nodes/fragment/203/node = SubResource("VisualShaderNodeReroute_gfub0")
nodes/fragment/203/position = Vector2(1440, -3080)
nodes/fragment/204/node = SubResource("VisualShaderNodeReroute_cfpue")
nodes/fragment/204/position = Vector2(1440, -2900)
nodes/fragment/205/node = SubResource("VisualShaderNodeReroute_esqut")
nodes/fragment/205/position = Vector2(2440, -2700)
nodes/fragment/206/node = SubResource("VisualShaderNodeReroute_0b7bf")
nodes/fragment/206/position = Vector2(1440, -2700)
nodes/fragment/207/node = SubResource("VisualShaderNodeFloatParameter_lp0p4")
nodes/fragment/207/position = Vector2(-1660, -3940)
nodes/fragment/208/node = SubResource("VisualShaderNodeFloatOp_fsmjo")
nodes/fragment/208/position = Vector2(-1300, -4100)
nodes/fragment/209/node = SubResource("VisualShaderNodeFloatOp_ulppe")
nodes/fragment/209/position = Vector2(540, -4260)
nodes/fragment/210/node = SubResource("VisualShaderNodeSmoothStep_m3lvb")
nodes/fragment/210/position = Vector2(860, -4180)
nodes/fragment/211/node = SubResource("VisualShaderNodeMultiplyAdd_3uxxx")
nodes/fragment/211/position = Vector2(280, -4160)
nodes/fragment/212/node = SubResource("VisualShaderNodeMultiplyAdd_ggofg")
nodes/fragment/212/position = Vector2(280, -3920)
nodes/fragment/213/node = SubResource("VisualShaderNodeReroute_j31qb")
nodes/fragment/213/position = Vector2(1100, -4120)
nodes/fragment/214/node = SubResource("VisualShaderNodeFrame_go5t5")
nodes/fragment/214/position = Vector2(240, -4301)
nodes/fragment/215/node = SubResource("VisualShaderNodeFloatOp_sl413")
nodes/fragment/215/position = Vector2(520, -2800)
nodes/fragment/216/node = SubResource("VisualShaderNodeMultiplyAdd_dkdhp")
nodes/fragment/216/position = Vector2(260, -2700)
nodes/fragment/217/node = SubResource("VisualShaderNodeMultiplyAdd_uvkmj")
nodes/fragment/217/position = Vector2(260, -2460)
nodes/fragment/218/node = SubResource("VisualShaderNodeReroute_x3ut1")
nodes/fragment/218/position = Vector2(1080, -2660)
nodes/fragment/219/node = SubResource("VisualShaderNodeSmoothStep_x2tgo")
nodes/fragment/219/position = Vector2(840, -2720)
nodes/fragment/220/node = SubResource("VisualShaderNodeFrame_e2uu5")
nodes/fragment/220/position = Vector2(220, -2841)
nodes/fragment/221/node = SubResource("VisualShaderNodeReroute_ppohm")
nodes/fragment/221/position = Vector2(-580, -4060)
nodes/fragment/222/node = SubResource("VisualShaderNodeReroute_65xsm")
nodes/fragment/222/position = Vector2(-640, -3760)
nodes/fragment/223/node = SubResource("VisualShaderNodeReroute_qjeco")
nodes/fragment/223/position = Vector2(-600, -3320)
nodes/fragment/224/node = SubResource("VisualShaderNodeReroute_ua020")
nodes/fragment/224/position = Vector2(-340, -1400)
nodes/fragment/225/node = SubResource("VisualShaderNodeExpression_acele")
nodes/fragment/225/position = Vector2(-1300, -1140)
nodes/fragment/225/size = Vector2(500, 420)
nodes/fragment/225/input_ports = "0,4,rgb;1,0,threshold;"
nodes/fragment/225/output_ports = "0,0,c;1,0,m;2,0,y;3,0,k;"
nodes/fragment/225/expression = "    // Normalize RGB (if necessary)
    float r = rgb.r;
    float g = rgb.g;
    float b = rgb.b;

    // Find K (black)
    k = 1.0 - max(r, max(g, b));
	k = smoothstep(threshold,1.0,k);

    // If K is not 1, compute C, M, and Y
    c = (k < 1.0) ? (1.0 - r - k) / (1.0 - k) : 0.0;
    m = (k < 1.0) ? (1.0 - g - k) / (1.0 - k) : 0.0;
    y = (k < 1.0) ? (1.0 - b - k) / (1.0 - k) : 0.0;"
nodes/fragment/226/node = SubResource("VisualShaderNodeFloatConstant_kt415")
nodes/fragment/226/position = Vector2(-1780, -1200)
nodes/fragment/227/node = SubResource("VisualShaderNodeVec2Parameter_uatwl")
nodes/fragment/227/position = Vector2(-3360, -420)
nodes/fragment/228/node = SubResource("VisualShaderNodeSmoothStep_lfbdd")
nodes/fragment/228/position = Vector2(840, -2080)
nodes/fragment/229/node = SubResource("VisualShaderNodeMultiplyAdd_an5xb")
nodes/fragment/229/position = Vector2(260, -2060)
nodes/fragment/230/node = SubResource("VisualShaderNodeFloatOp_lcfsm")
nodes/fragment/230/position = Vector2(520, -2160)
nodes/fragment/231/node = SubResource("VisualShaderNodeMultiplyAdd_5brlf")
nodes/fragment/231/position = Vector2(260, -1820)
nodes/fragment/232/node = SubResource("VisualShaderNodeReroute_mdutf")
nodes/fragment/232/position = Vector2(1080, -2020)
nodes/fragment/233/node = SubResource("VisualShaderNodeFrame_scs4h")
nodes/fragment/233/position = Vector2(220, -2201)
nodes/fragment/234/node = SubResource("VisualShaderNodeReroute_g6fad")
nodes/fragment/234/position = Vector2(40, -1780)
nodes/fragment/235/node = SubResource("VisualShaderNodeVectorOp_ua020")
nodes/fragment/235/position = Vector2(3767.39, -2770.82)
nodes/fragment/236/node = SubResource("VisualShaderNodeTexture_acele")
nodes/fragment/236/position = Vector2(3480, -2460)
nodes/fragment/237/node = SubResource("VisualShaderNodeTexture2DParameter_kt415")
nodes/fragment/237/position = Vector2(3000, -2440)
nodes/fragment/238/node = SubResource("VisualShaderNodeRotationByAxis_ua020")
nodes/fragment/238/position = Vector2(-1460, -2000)
nodes/fragment/connections = PackedInt32Array(16, 0, 18, 2, 125, 0, 126, 0, 132, 0, 126, 1, 162, 1, 144, 0, 160, 0, 166, 0, 126, 0, 169, 0, 130, 0, 169, 1, 126, 0, 171, 0, 130, 0, 171, 1, 126, 0, 172, 0, 130, 0, 172, 1, 129, 0, 133, 2, 129, 0, 170, 2, 129, 0, 173, 2, 179, 0, 178, 0, 180, 0, 179, 0, 16, 0, 178, 2, 181, 0, 179, 1, 184, 0, 160, 0, 185, 0, 160, 1, 186, 0, 160, 2, 183, 0, 186, 1, 183, 0, 185, 1, 183, 0, 184, 1, 18, 0, 167, 0, 169, 0, 190, 0, 190, 0, 133, 0, 171, 0, 191, 0, 191, 0, 170, 0, 192, 0, 193, 0, 170, 0, 198, 0, 198, 0, 199, 0, 200, 0, 201, 0, 144, 0, 200, 2, 199, 0, 200, 0, 198, 0, 200, 1, 168, 0, 162, 0, 202, 0, 184, 0, 201, 0, 203, 0, 203, 0, 185, 0, 204, 0, 186, 0, 205, 0, 160, 3, 206, 0, 205, 0, 207, 0, 208, 0, 211, 0, 209, 0, 210, 0, 213, 0, 212, 0, 210, 2, 209, 0, 210, 0, 211, 0, 210, 1, 216, 0, 215, 0, 219, 0, 218, 0, 217, 0, 219, 2, 215, 0, 219, 0, 216, 0, 219, 1, 133, 0, 211, 0, 173, 0, 216, 0, 208, 0, 221, 0, 221, 0, 198, 2, 221, 0, 216, 2, 221, 0, 211, 2, 207, 0, 222, 0, 222, 0, 199, 1, 222, 0, 209, 1, 222, 0, 215, 1, 162, 0, 212, 0, 193, 0, 223, 0, 223, 0, 144, 1, 223, 0, 217, 1, 223, 0, 212, 1, 162, 2, 217, 0, 218, 0, 204, 0, 213, 0, 202, 0, 178, 0, 225, 0, 225, 3, 224, 0, 194, 0, 162, 1, 226, 0, 225, 1, 227, 0, 181, 0, 229, 0, 230, 0, 228, 0, 232, 0, 231, 0, 228, 2, 230, 0, 228, 0, 229, 0, 228, 1, 224, 0, 234, 0, 234, 0, 231, 0, 223, 0, 231, 1, 221, 0, 229, 2, 222, 0, 230, 1, 232, 0, 206, 0, 137, 0, 0, 0, 235, 0, 137, 0, 236, 0, 235, 1, 237, 0, 236, 2, 172, 0, 238, 0, 238, 0, 173, 0, 173, 0, 229, 0, 18, 0, 168, 0, 160, 0, 235, 0)
